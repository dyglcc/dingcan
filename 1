
/*
 * GET home page.
 */
var sha1 = require('sha1');
//var querystring = require('querystring');
var xml = require('node-xml');
exports.index = function(req, res){
  res.render('index', { title: 'Express' })
};

exports.weixin = function(req,res){
	console.log('post : sdf');
		console.log(req.body);
	console.log(req.query);
		// console.log(req.params.xx);
res.json({id:req.body});
  //res.render('index', { title: 'Expresssssssss post ssssssssssssssssss'} );
 
};



exports.sub = function(req,res){
        console.log('post : sub----');

req.on('data', function (chunk) {
    body += chunk;
  });
  req.on('end', function () {
    console.log('body: ' + body);
//var params = querystring.parse(body);
  //console.log(params);
  //  jsonObj = JSON.parse(body);
//  co//nsole.log(jsonObj.$key);
  });
res.end('helloworld');
//res.json(jsonObj);
  //res.render('index', { title: 'Expresssssssss post ssssssssssssssssss'} );
	processMessage(body,res);
}
function processMessage(data,response){
var ToUserName="";
var FromUserName="";
var CreateTime="";
var MsgType="";
var Content="";
var Location_X="";
var Location_Y="";
var Scale=1;
var Label="";
var PicUrl="";
var FuncFlag="";
 
var tempName="";
var parse=new xml.SaxParser(function(cb){
    cb.onStartElementNS(function(elem,attra,prefix,uri,namespaces){
        tempName=elem;
    });
     
    cb.onCharacters(function(chars){
        chars=chars.replace(/(^\s*)|(\s*$)/g, "");
        if(tempName=="CreateTime"){
            CreateTime=chars;
        }else if(tempName=="Location_X"){
            Location_X=cdata;
        }else if(tempName=="Location_Y"){
            Location_Y=cdata;
        }else if(tempName=="Scale"){
            Scale=cdata;
        }
         
         
    });
     
    cb.onCdata(function(cdata){
         
        if(tempName=="ToUserName"){
            ToUserName=cdata;
        }else if(tempName=="FromUserName"){
            FromUserName=cdata;
        }else if(tempName=="MsgType"){
            MsgType=cdata;
        }else if(tempName=="Content"){
            Content=cdata;
        }else if(tempName=="PicUrl"){
            PicUrl=cdata;
        }else if(tempName=="Label"){
            Label=cdata;
        }
        console.log("cdata:"+cdata);
    });
     
    cb.onEndElementNS(function(elem,prefix,uri){
        tempName="";
    });
     
    cb.onEndDocument(function(){
        console.log("onEndDocument");
        tempName="";
        var date=new Date(); 
        var yy=date.getYear(); 
        var MM=date.getMonth() + 1; 
        var dd=date.getDay(); 
        var hh=date.getHours(); 
        var mm=date.getMinutes(); 
        var ss=date.getSeconds(); 
        var sss=date.getMilliseconds();  
        var result=Date.UTC(yy,MM,dd,hh,mm,ss,sss); 
        var msg="";
        if(MsgType=="text"){
            msg="谢谢关注,你说的是："+Content;
        }else if (MsgType="location"){
            msg="你所在的位置: 经度："+Location_X+"纬度："+Location_Y;
        }else if (MsgType="image"){
            msg="你发的图片是："+PicUrl;
        }
       // messageSender.sendTextMessage(FromUserName,ToUserName,CreateTime,msg,FuncFlag,response);
        res.end('hello formuser :'+FromUserName);
    });
});
    parse.parseString(data);
}


// test
exports.test = function(req,res){

	var ip = req.headers['x-forwarded-for'] ||
        req.connection.remoteAddress ||
        req.socket.remoteAddress ||
        req.connection.socket.remoteAddress;
console.log( req.query);
console.log( ip+     'ip');
	res.json({success: true,message:"登入成功",ip:ip,querystring:req.query});
}
var token = "dingcan";
exports.checkSignature= function(req,res){
	var echostr = req.query.echostr;
	if(check(req)){
		 res.write(echostr);
		res.end();
	}
	return res.json({f:false});
}
function check(req){
	var signature = req.query.signature;
        var timestamp = req.query.timestamp;
        var nonce = req.query.nonce;
        var echostr = req.query.echostr;

        var arrayT = [token,timestamp,nonce];

console.log(arrayT);

        var sortStr = arrayT.sort().join('');
        sortStr = sha1(sortStr);
console.log(sortStr);
console.log(signature + ' sing');
console.log(timestamp + ' time');
console.log(nonce + ' nonce');
console.log(echostr+' echostr');
	if(signature == sortStr){
		return true;
	}else{
		return false;
	}

}
